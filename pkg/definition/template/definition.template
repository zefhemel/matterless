{{ $root := . }}
## Environment
These are the variables exposed to all functions:
{{ range $key, $env := .Environment }}
- `{{ $key }}`{{ end }}

{{if .Events}}
## Events
{{ range $key, $fns := .Events }}
- `{{ $key }}` listened to by{{ range $fns }} `{{.}}`{{end}}{{ end }}
{{ end }}
## Functions
{{ range $key, $env := .Functions }}
- `{{ $key }}`{{ end }}

{{if .Bots}}
## Bots
{{ range $name, $def := .Bots }}
- `{{$name}}` (`@{{$def.Username}}`), responding to the following events:{{ range $eventName, $eventsTriggered := .Events }}
    - `{{$eventName}}` triggering functions {{range $eventsTriggered}}`{{.}}` {{end}}
{{ end }}{{ end }}{{ end }}

{{if .MattermostClients}}
## MattermostClients
{{ range $name, $def := .MattermostClients }}
- `{{$name}}`, responding to the following events:{{ range $eventName, $eventsTriggered := .Events }}
    - `{{$eventName}}` triggering functions {{range $eventsTriggered}}`{{.}}` {{end}}{{ end }}{{ end }}{{ end }}

{{if .SlashCommands}}
## Slash commands
{{ range $key, $env := .SlashCommands }}
- `/{{$env.Trigger}}` (invoking `{{$env.Function}}`){{ end }}
{{end}}
{{if .Crons}}
## Crons
{{ range $name, $def := .Crons }}
- `{{$def.Schedule}}` (invoking `{{$def.Function}}`){{ end }}
{{end}}

{{if .APIs}}
## APIs
{{ range .APIs }}
- [`{{.Path}}`]({{$root.Environment.API_URL}}{{.Path}}) {{if .Function}}triggering function `{{.Function}}`{{else}}triggering internal logic{{end}}{{end}}{{end}}